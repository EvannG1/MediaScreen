{% extends "Layout.twig" %}

{% block style %}
<link rel="stylesheet" href="/assets/css/gestion_ecran.css">
{% endblock %}

{% block content %}
<h1>Gestion des écrans</h1>
<table class="table table-sm table-hover">
    <thead>
        <tr>
            <th style="width: 25%;">Nom de l'écran</th>
            <th style="width: 25%;">Séquence associée</th>
            <th style="width: 15%;">Type d'écran</th>
            <th style="width: 15%;">Durée</th>
            <th style="width: 10%;">Auteur</th>
            <th style="width: 5%;"></th>
            <th style="width: 5%;"></th>
        </tr>
    </thead>

    <tbody>
    {% for screen in screens %}
        <tr>
            <td class="panel_nomEcran">{{ screen.nom }}</td>
            <td class="panel_seqAssocie">{{ screen.sequence.nom }}</td>
            <td class="panel_typeEcran">
            {% if screen.id_type == 1 %}
                Markdown
            {% elseif screen.id_type == 2 %}
                Vidéo
            {% endif %}
            </td>
            <td class="panel_duree">{{ screen.temps / 1000 }}s</td>
            <td class="panel_auteur">{{ screen.auteur }}</td>
            <td class="panel_update">
                <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#editEcran_{{ screen.id }}">
                    <i class="far fa-edit"></i>
                </button>
                <div class="modal fade exampleModalClass" id="editEcran_{{ screen.id }}" tabindex="-1" role="dialog"
                    aria-labelledby="editEcranLabel_{{ screen.id }}">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title" id="editEcranLabel_{{ screen.id }}">Modifier l'écran</h4>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Fermer"><span
                                        aria-hidden="true">×</span></button>
                            </div>
                            <div class="modal-body">
                                <form>
                                    <div class="form-group">
                                        <label class="control-label">Nom écran :</label>
                                        <input type="text" value="{{ screen.nom }}"
                                            class="form-control update_nomEcran">
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Séquence associée :</label>
                                        <select class="form-control update_sequenceEcran">
                                            {% for sequence in sequences %}
                                            <option value="{{ sequence.id }}"{{ (sequence.id == screen.id_sequence) ? 'selected' : '' }}>{{ sequence.nom }}</option>                                       
                                            {% endfor %}
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Veuillez saisir le temps de l'écran (en seconde)
                                            :</label>
                                        <input class="form-control update_ecran_time" value="{{ screen.temps / 1000 }}" type="number">
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Annuler</button>
                                <button type="button" class="btn btn-dark" onclick="updateEcran({{ screen.id }}, this)">Modifier
                                    l'écran</button>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
            <td class="panel_delete">
                <input type="button" value="Supprimer" class="btn btn-danger delCompteBtn" data-toggle="modal"
                    data-target="#deleteEcran_{{ screen.id }}">
                <div class="modal fade" id="deleteEcran_{{ screen.id }}" tabindex="-1" role="dialog"
                    aria-labelledby="deleteEcranLabel_{{ screen.id }}" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title" id="deleteEcranLabel_{{ screen.id }}">Supprimer un écran :</h4>
                            </div>
                            <div class="modal-body">
                                <p>Êtes-vous sûr de vouloir supprimer la écran : {{ screen.nom }}?</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Annuler</button>
                                <button type="button" class="btn btn-danger btn-ok"
                                    onclick="deleteEcran({{ screen.id }}, this)">Supprimer</button>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    {% endfor %}
    </tbody>
</table>
{% endblock %}

{% block script %}
<script>
function deleteEcran(id, leBtn) {
    let model = $(leBtn).parents().closest('.modal');
    let lineDelet = $(leBtn).parents().closest('tr');

    let http = new XMLHttpRequest();
    let params = 'id=' + id;
    http.open('POST', '{{ path_for('
        screenDelete ') }}', true);

    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
    http.onreadystatechange = function () {
        if (http.readyState == 4 && http.status == 200) {
            //   console.log(http.responseText);
            if (http.responseText == 'success') {
                $(model).modal('hide');
                //   createMessageAlert('green', 'Succès', "L'écran a bien été supprimé.");
                $(lineDelet).hide('slow', function () {
                    $(lineDelet).remove();
                });
            } else {
                //   createMessageAlert('red', 'Erreur', http.responseText);
            }
        }
    }
    http.send(params);
}

function updateEcran(id, leBtn) {
    let bodyModal = $(leBtn).parent().prev('.modal-body');
    let nom = $(bodyModal).find('.update_nomEcran').val();
    let sequenceAssocie = $(bodyModal).find('.update_sequenceEcran').val();
    let sequenceAssocieText = $(bodyModal).find('.update_sequenceEcran option:selected').text();
    let ecranTime = $(bodyModal).find('.update_ecran_time').val();

    if (nom && sequenceAssocie && ecranTime) {
        let model = $(leBtn).parents().closest('.modal');
        let lineUpdate = $(leBtn).parents().closest('tr');
        let http = new XMLHttpRequest();

        let params =
            'id=' + id +
            '&newNom=' + nom +
            '&newSequence=' + sequenceAssocie +
            '&newEcranTime=' + ecranTime;
        http.open('POST', '{{ path_for('
            screenUpdate ') }}', true);

        http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        http.onreadystatechange = function () {
            if (http.readyState == 4 && http.status == 200) {
                //   console.log(http.responseText);
                if (http.responseText == 'success') {
                    $(lineUpdate).find('.panel_nomEcran').text(nom);
                    $(lineUpdate).find('.panel_seqAssocie').text(sequenceAssocieText);
                    $(lineUpdate).find('.panel_duree').text(ecranTime);
                    $(model).modal('hide');
                } else {
                    //   createMessageAlert('red', 'Erreur', http.responseText);
                }
            }
        }
        http.send(params);
    } else {
        alert("Une erreur est survenue : des champs sont manquants, introuvable, ou incomplet \n\rSi le problème persiste actualisez la page ou contacter l'administrateur du site");
    }
}
</script>
{% endblock %}